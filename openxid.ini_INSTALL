; ini-file for Open XId Server (OXID)

[setup]
version = 0.3

; wsdl for service
wsdl = openxid.wsdl

; in_house_domain may use ?ShowInfo and use create_sample form
;in_house_domain = .dbc.dk

; set to TRUE to expose the create_sample form
;show_samples = 1

; validate
validate['soap_request'] = soap.xsd
validate['request'] = openxid.xsd
;validate['response'] = openxid.xsd

; soapActions and their corresponding request structure
; Can be found in the wsdl but is stated here for convenience
soapAction['getIdsRequest'] = getIdsRequest
soapAction['updateIdRequest'] = updateIdRequest

; prefixes and namespaces
xmlns['xid'] = http://oss.dbc.dk/ns/openxid

; path to xml-examples
xmldir = ./xml

; logfile for verbose output
logfile = openxid.log

; set verboselevel
;   WARNING - simple warnings
;   ERROR   - errors in response
;   FATAL   - major errors
;   STAT    - Statistical logging
;   TIMER   - timer logging
;   TRACE   - program trace
;   DEBUG   - debugging info
;   Z3959   - calls to z3950 services
;   OCI     - oracle
verbose = WARNING+ERROR+FATAL+STAT+TIMER+TRACE+DEBUG+Z3950

; format for automatic timer dump %s is the soap-action used
;dump_timer = openxid(%s)

; Postgres credentials
;oxid_credentials = ...


[aaa]
; aaa Authentication, Access control and Accounting
;
; if aaa_credentials is set, the rights-object is created from
; aaa_ip_rights below if ip-match otherwise it is set from
; the FORS-server if aaa_credentials contains a valid fors-login
;
; oci credentials for FORS server
;aaa_credentials = ...
;
; memcache server - use localhost in one-webserver environment
;aaa_cache_address = localhost:11211
;
; number of seconds to cache authentication and access rights info
;aaa_cache_seconds = 3600
;
; As an alternative to FORS rights, rights can be set here for selected ip-addresses
; aaa_ip_rights[group-identifier][ip_list] = list of ip's
; aaa_ip_rights[group-identifier][ressource][<named ressource>] = right to <named ressource>
; aaa_ip_rights[group-identifier][ressource][<named ressource 2>] = right to <named ressource 2>
;
aaa_ip_rights['dbc']['ip_list'] = 172.16.0.0-172.31.255.255;193.111.162.0-193.111.162.255
aaa_ip_rights['dbc']['ressource']['openxidupdate'] = 500
aaa_ip_rights['users']['ip_list'] = 172.16.0.0-172.31.255.255;193.111.162.0-193.111.162.255
aaa_ip_rights['users']['ressource']['openxidget'] = 560


[rest]
; REST parameters for SOAPactions
;
; use xml.path.to.par notation to solve name-conflicts
; action'thisSoapAction']['foo'][] = some.number
; action['thisSoapAction']['bar'][] = another.number
; to build
; <thisSoapAction>
;   <foo>
;     <number>nn</number>
;   </foo>
;   <bar>
;     <number>mm</number>
;   </bar>
; </thisSoapAction>
; from url: action=thisSoapAction&some.number=nn&another.number=mm
;

action['ALL'][] = outputType
action['ALL'][] = callback

action['getIdsRequest']['id'][] = idType
action['getIdsRequest']['id'][] = id.idType
action['getIdsRequest']['id'][] = idValue
action['getIdsRequest']['id'][] = id.idValue

action['updateIdRequest'][] = recordId
action['updateIdRequest'][] = clusterId
action['updateIdRequest']['id'][] = idType
action['updateIdRequest']['id'][] = id.idType
action['updateIdRequest']['id'][] = idValue
action['updateIdRequest']['id'][] = id.idValue


[howru]
;test[] = xid&xidName=orderid_xid
;preg_match[] = <xid>
;error[] = ERROR - Cannot ....

